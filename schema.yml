openapi: 3.0.3
info:
  title: Fit Quest API Documentation
  version: 1.0.0
  description: Lorem ipsum...
paths:
  /api/account/delete:
    delete:
      operationId: account_delete_destroy
      tags:
      - account
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/account/password-change:
    put:
      operationId: account_password_change_update
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: account_password_change_partial_update
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPasswordChangeRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/account/update:
    put:
      operationId: account_update_update
      tags:
      - account
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
    patch:
      operationId: account_update_partial_update
      tags:
      - account
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAccountRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
  /api/auth/login:
    post:
      operationId: auth_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
        required: true
      responses:
        '200':
          description: No response body
  /api/auth/refresh:
    post:
      operationId: auth_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/register:
    post:
      operationId: auth_register_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/location/create:
    post:
      operationId: location_create_create
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
  /api/quest/:
    get:
      operationId: quest_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - quest
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQuestList'
          description: ''
  /api/quest/{slug}:
    get:
      operationId: quest_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - quest
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quest'
          description: ''
components:
  schemas:
    Account:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
        birth_date:
          type: string
          format: date
        height:
          type: number
          format: double
        weight:
          type: number
          format: double
        profile:
          type: string
          format: uri
        slug:
          type: string
          readOnly: true
      required:
      - birth_date
      - email
      - first_name
      - height
      - last_name
      - slug
      - username
      - weight
    AccountRequest:
      type: object
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 255
        last_name:
          type: string
          minLength: 1
          maxLength: 255
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        birth_date:
          type: string
          format: date
        height:
          type: number
          format: double
        weight:
          type: number
          format: double
        profile:
          type: string
          format: binary
      required:
      - birth_date
      - first_name
      - height
      - last_name
      - username
      - weight
    Location:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        quest:
          type: string
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - latitude
      - longitude
      - quest
      - slug
      - updated_at
    LocationRequest:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        quest:
          type: string
          minLength: 1
      required:
      - latitude
      - longitude
      - quest
    PaginatedQuestList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Quest'
    PasswordChangeRequest:
      type: object
      properties:
        old_password:
          type: string
          writeOnly: true
          minLength: 1
        new_password1:
          type: string
          writeOnly: true
          minLength: 1
        new_password2:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - new_password1
      - new_password2
      - old_password
    PatchedAccountRequest:
      type: object
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 255
        last_name:
          type: string
          minLength: 1
          maxLength: 255
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        birth_date:
          type: string
          format: date
        height:
          type: number
          format: double
        weight:
          type: number
          format: double
        profile:
          type: string
          format: binary
    PatchedPasswordChangeRequest:
      type: object
      properties:
        old_password:
          type: string
          writeOnly: true
          minLength: 1
        new_password1:
          type: string
          writeOnly: true
          minLength: 1
        new_password2:
          type: string
          writeOnly: true
          minLength: 1
    Quest:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        distance:
          type: integer
          readOnly: true
        prize:
          type: integer
          readOnly: true
        slug:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - description
      - distance
      - name
      - prize
      - slug
      - updated_at
    TokenObtainPairRequest:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - email
      - username
    UserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 255
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password1:
          type: string
          writeOnly: true
          minLength: 1
        password2:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - password1
      - password2
      - username
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
